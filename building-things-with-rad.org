#+TITLE: Building Things With Rad

* Building Things with Fulcro RAD

Personal notes on Tony Kay's video "Building Things with RAD"

Video: https://www.youtube.com/watch?v=P2up8qcDmJs&t=1s
Source code for video: https://github.com/fulcrologic/fulcro-rad-tutorial
The RAD book is at http://book.fulcrologic.com/RAD.html
Fulcro RAD Demo: https://github.com/fulcrologic/fulcro-rad-demo

These notes refer to shortened namespaces in the fulcro-rad-tutorial, e.g.:
- c.e.client refers to com.example.client.cljs
- c.e.u.item-forms refers to com.example.ui.item-forms.cljc
- c.f.r.report refers to com.fulcrologic.rad.report.cljc

** Overview
https://youtu.be/P2up8qcDmJs?t=1

- Goal of this video: Show what it looks like to work with Fulcro RAD.
- A quick overview of working with the Fulcro RAD backend libraries is here:
  [[https://www.youtube.com/watch?v=H2XY5kdcjGU][Fulcro RAD Structural Overview]]
- Other resources: RAD Book, RAD Demo (see above for links)
- In the RAD demo, login is setup but authorization is least "baked" part of
  RAD.
- RAD includes timezone support, datetime, routing, advanced html5 routing.
- High-level overview of HTML5 routing (stacked on top of Fulcro's standard
  routing)

** UI Overview
https://youtu.be/P2up8qcDmJs?t=172

- Server and model is covered in [[https://www.youtube.com/watch?v=H2XY5kdcjGU][Fulcro RAD Structural Overview]] - look there for
  an explanation of how the backend is working.
- Notice that almost all the files are cljc - most of the stuff is meant to be
  use on the front-end and backend simultaneously.
- Some of the stuff (i.e. the Fulcro client itself in c.e.client.cljs) is
  front-end only.

** Client code Review (c.e.client)
https://youtu.be/P2up8qcDmJs?t=211

- c.e.client is just a Fulcro RAD app
- It has a "half-baked" authorization system (auth/start! ...)
- c.e.client/refresh and c.e.client/init are to manage app initialization and
  development reloading.
- On the front-end, we have timezone support. Once user has set the timezone,
  all features will use the correct timezone for whenever a time is chosen.
- route-history is an addon to RAD's routing stuff, this keeps track of route
  parameters in the URL and hooking up to the event system.
- install-ui-controls is how you hookup a ui plugin in this case we're using
  semantic-ui (sui/all-controls)
  + Found in: com.fulcrologic.rad.rendering.semantic-ui.semantic-ui-controls
- The rendering plugins are just a map of type to style to ui-control.
  + A string that should be rendered as "default" uses the
    text-field/render-field function.
  + A string that should be rendered as a password uses the
    text-field/render-password function (etc.)
- You can expand this map to include your own controls to support specific types
  and styles in the UI (refer to the pre-defined functions for examples)
- c.e.client looks like a standard Fulcro client. It's just a Fulcro app with
  some addons and preset things:
  + http-remote
  + add eql transforms
  + and sets the renderer to a multi-root renderer because it needs that.

** The UI (c.e.ui)
https://youtu.be/P2up8qcDmJs?t=372

WIP ...

** Review of `defsc-form`:
https://youtu.be/P2up8qcDmJs?t=640

WIP ...
